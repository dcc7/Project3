{"version":3,"sources":["images/bitcoin.png","components/Navbar.jsx","services/cryptoApi.js","components/Loader.jsx","components/Cryptocurrencies.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","components/Exchanges.jsx","components/Homepage.jsx","services/cryptoNewsApi.js","components/News.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","shape","style","padding","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoApiHeaders","process","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timePeriod","getExchanges","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetExchangesQuery","Loader","Cryptocurrencies","simplified","cryptosList","data","isFetching","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","coins","filter","coin","name","toLowerCase","includes","placeholder","onChange","e","target","value","gutter","map","currency","xs","sm","lg","id","title","rank","extra","iconUrl","alt","hoverable","millify","price","marketCap","change","Typography","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","Text","Option","Select","CryptoDetails","useParams","setTimePeriod","cryptoDetails","undefined","stats","DollarCircleOutlined","NumberOutlined","volume","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","HTMLReactParser","description","links","link","type","href","rel","Panel","Collapse","Exchanges","exchangesList","exchanges","span","exchange","showArrow","header","marketShare","Homepage","globalStats","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImage","News","setNewsCategory","cryptoNews","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","maxWidth","maxHeight","image","thumbnail","contentUrl","substring","provider","moment","datePublished","startOf","fromNow","App","exact","path","color","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.258629d0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bitcoin.8c388765.png\";","import React, { useState, useEffect } from 'react';\nimport { Button, Menu, Typography, Avatar } from 'antd'\nimport { Link } from 'react-router-dom';\nimport { HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined } from '@ant-design/icons';\n\nimport icon from '../images/bitcoin.png'\n\nconst Navbar = () => {\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [screenSize, setScreenSize] = useState(null);\n\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth);\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    if(screenSize < 768) {\n      setActiveMenu(false)\n    } else {\n      setActiveMenu(true)\n    }\n  }, [screenSize]) //called whenever the screen size changes.\n\n  return (\n    <div className=\"nav-container\">\n      <div className=\"logo-container\">\n        <Avatar src={icon} size=\"large\" />\n        <Typography.Title level={1} className=\"logo\">\n          <Link to=\"/\">Coinium</Link>\n        </Typography.Title>\n        <Button\n          className=\"menu-control-container\"\n          onClick={() => setActiveMenu(!activeMenu)}\n          size=\"large\"\n          shape=\"default\"\n          style={{ padding: \"3px\"}}\n          >\n          <MenuOutlined />\n        </Button>\n      </div>\n      {activeMenu && ( //if activeMenu is true then....\n        <Menu className=\"navigation-section\" theme=\"dark\">\n          <Menu.Item icon={<HomeOutlined />}>\n            <Link to=\"/\">Home</Link>\n          </Menu.Item>\n          <Menu.Item icon={<FundOutlined />}>\n            <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\n          </Menu.Item>\n          <Menu.Item icon={<MoneyCollectOutlined />}>\n            <Link to=\"/exchanges\">Exchanges</Link>\n          </Menu.Item>\n          <Menu.Item icon={<BulbOutlined />}>\n            <Link to=\"/news\">News</Link>\n          </Menu.Item>\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default Navbar\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nconst cryptoApiHeaders = {\n  'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\n  'x-rapidapi-key': `${process.env.REACT_APP_API_KEY}`\n}\nconst baseUrl = 'https://coinranking1.p.rapidapi.com';\n\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders});\n\nexport const cryptoApi = createApi({\n  reducerPath: 'cryptoApi', //purpose of the reducer.\n  baseQuery: fetchBaseQuery({ baseUrl }),\n  endpoints: (builder) => ({ //end points are defined here.\n    getCryptos: builder.query({\n      query: (count) => createRequest(`/coins?limit=${count}`)\n    }),\n    getCryptoDetails: builder.query({\n      query: (coinId) => createRequest(`/coin/${coinId}`),\n    }),\n    getCryptoHistory: builder.query({\n      query: ({ coinId, timePeriod }) => createRequest(`/coin/${coinId}/history/${timePeriod}`),\n    }),\n    getExchanges: builder.query({\n      query: () => createRequest('/exchanges'),\n    })\n  })\n});\n//end points must also be conencted to the store as it is passed down as a prop.\n\n//redux toolkit creates a hook to get all the data from your query instantly (as shown below via the variables).\nexport const { useGetCryptosQuery, useGetCryptoDetailsQuery, useGetCryptoHistoryQuery, useGetExchangesQuery } = cryptoApi;\n","import React from 'react'\nimport { Spin } from 'antd'\nimport 'antd/dist/antd.css';\n\nconst Loader = () => {\n  return (\n    <div className=\"loader\">\n      <Spin size=\"large\"/>\n    </div>\n  )\n}\n\nexport default Loader\n","import React, { useState, useEffect } from 'react';\nimport millify from 'millify';\nimport { Link } from 'react-router-dom';\nimport { Card, Row, Col, Input } from 'antd';\n\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport Loader from './Loader';\n\nconst Cryptocurrencies = ({ simplified }) => {\n  const count = simplified ? 10 : 100;\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\n  const [cryptos, setCryptos] = useState([]);\n  const [searchTerm, setSearchTerm] =useState('');\n\n\n  useEffect(() => {\n\n    const filteredData = cryptosList?.data?.coins.filter((coin) => coin.name.toLowerCase().includes(searchTerm.toLowerCase()));\n\n    setCryptos(filteredData);\n\n  }, [cryptosList, searchTerm]);\n  //use effect, accepts a callback function and a dependency array. It is a combination of the componentDidMount and componentDidUpdate.\n  //if anything changes in the dependency array, the callback function will be executed.\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n    {!simplified && (\n      <div className=\"search-crypto\">\n        <Input placeholder=\"Search Cryptocurrency\" onChange={(e) => setSearchTerm(e.target.value)}/>\n      </div>\n\n    )}\n      <Row gutter={[15, 0]} className=\"crypto-card-container\">\n        {cryptos?.map((currency) => (\n          <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\n            <Link to={`/crypto/${currency.id}`}>\n              <Card\n                title={`${currency.rank}. ${currency.name}`}\n                extra={<img className=\"crypto-image\" src={currency.iconUrl} alt=\"crypto-image\"/>}\n                hoverable\n                >\n                  <p>Price: ${millify(currency.price)}</p>\n                  <p>Market Cap: ${millify(currency.marketCap)}</p>\n                  <p>Daily Change: {millify(currency.change)}%</p>\n              </Card>\n            </Link>\n          </Col>\n        ))}\n      </Row>\n    </>\n  )\n}\n\nexport default Cryptocurrencies\n\n//the use of parenthesis with the map method, means we will return instantly comapred to the use of curly braces.\n//the question mark ensures that when it is undefined it will not map.\n","import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Col, Row, Typography } from 'antd';\n\nconst { Title } = Typography;\n\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\n\n  const coinPrice = [];\n  const coinTimestamp = [];\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinPrice.push(coinHistory?.data?.history[i].price);\n  }\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinTimestamp.push(new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString()); //readability.\n  }\n\n  const data = {\n    labels: coinTimestamp,\n    datasets: [\n      {\n        label: 'Price In USD',\n        data: coinPrice,\n        fill: false,\n        backgroundColor: '#0071bd',\n        borderColor: '#0071bd',\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <>\n      <Row className=\"chart-header\">\n        <Title level={2} className=\"chart-title\">{coinName} Price Chart </Title>\n        <Col className=\"price-container\">\n          <Title level={5} className=\"price-change\">Change: {coinHistory?.data?.change}%</Title>\n          <Title level={5} className=\"current-price\">Current {coinName} Price: $ {currentPrice}</Title>\n        </Col>\n      </Row>\n      <Line data={data} options={options} />\n    </>\n  );\n};\n\nexport default LineChart;\n","import React, { useState } from 'react';\nimport HTMLReactParser from 'html-react-parser';\nimport { useParams } from 'react-router-dom';\nimport millify from 'millify';\nimport { Col, Row, Typography, Select } from 'antd';\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\n\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi';\nimport LineChart from './LineChart';\nimport Loader from './Loader';\n\nconst { Title, Text } = Typography\nconst { Option } = Select;\n\n\nconst CryptoDetails = () => {\n  const { coinId } = useParams(); //takes the ID in the url and place in a variable.\n  const [ timePeriod, setTimePeriod ] = useState('7d');\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n  const { data: coinHistory } = useGetCryptoHistoryQuery({coinId, timePeriod});\n  const cryptoDetails = data?.data?.coin;\n\n  if (cryptoDetails === undefined) return <Loader />; //required due to asynchronous nature of JS.\n\n\n  const time = ['24h','7d', '30d', '1y', '3m', '3y', '5y'];\n\n  const stats = [\n    { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\n    { title: 'Rank', value: cryptoDetails?.rank, icon: <NumberOutlined /> },\n    { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\n    { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\n    { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\n  ];\n\n  const genericStats = [\n    { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\n    { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\n    { title: 'Approved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\n    { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\n    { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\n  ];\n\n\n  return (\n    <Col className=\"coin-detail-container\">\n      <Col className=\"coin-heading-container\">\n        <Title level={2} className=\"coin-name\">\n           {cryptoDetails.name} ({cryptoDetails.slug}) Price\n        </Title>\n        <p>\n          {cryptoDetails.name} live price in USD.\n          View value statistics, market cap and supply.\n        </p>\n      </Col>\n      <Select\n        defaultValue=\"7d\"\n        className=\"select-timeperiod\"\n        placeholder=\"Select Time Period\"\n        onChange={(value) => setTimePeriod(value)}\n        >\n        {time.map((date) => <Option key={date}>{date}</Option>)}\n      </Select>\n      <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails.price)} coinName={cryptoDetails.name}/>\n      <Col className=\"stats-container\">\n        <Col className=\"coin-value-statistics\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">\n              {cryptoDetails.name} Value Statistics\n            </Title>\n            <p>\n              An overview showing the stats of {cryptoDetails.name}\n            </p>\n            {stats.map(({icon, title, value}) => (\n              <Col className=\"coin-stats\">\n                <Col className=\"coin-stats-name\">\n                  <Text>{icon}</Text>\n                  <Text>{title}</Text>\n                </Col>\n                <Text className=\"stats\">{value}</Text>\n              </Col>\n            ))}\n          </Col>\n        </Col>\n        <Col className=\"other-stats-info\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">\n              Other Statistics\n            </Title>\n            <p>\n              An overview showing the stats of all cryptocurrencies\n            </p>\n            {genericStats.map(({icon, title, value}) => (\n              <Col className=\"coin-stats\">\n                <Col className=\"coin-stats-name\">\n                  <Text>{icon}</Text>\n                  <Text>{title}</Text>\n                </Col>\n                <Text className=\"stats\">{value}</Text>\n              </Col>\n            ))}\n          </Col>\n        </Col>\n      </Col>\n      <Col className=\"coin-desc-link\">\n        <Row className=\"coin-desc\">\n          <Title level={3} className=\"coin-details-heading\">\n            What is {cryptoDetails.name}?\n            {HTMLReactParser(cryptoDetails.description)}\n          </Title>\n        </Row>\n        <Col className=\"coin-links\">\n          <Title level={3} className=\"coin-details-heading\">\n            {cryptoDetails.name} Links\n            {cryptoDetails.links.map((link) => (\n              <Row className=\"coin-link\" key={link.name}>\n                <Title level={5} className=\"link-name\">\n                  {link.type}\n                </Title>\n                <a href={link.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                  {link.name}\n                </a>\n              </Row>\n            ))}\n          </Title>\n        </Col>\n      </Col>\n    </Col>\n  )\n}\n\nexport default CryptoDetails\n","import React from 'react';\nimport millify from 'millify';\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd';\nimport HTMLReactParser from 'html-react-parser';\n\nimport { useGetExchangesQuery } from '../services/cryptoApi';\nimport Loader from './Loader';\n\nconst { Text } = Typography;\nconst { Panel } = Collapse;\n\nconst Exchanges = () => {\n  const { data, isFetching } = useGetExchangesQuery();\n  const exchangesList = data?.data?.exchanges;\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      <Row>\n        <Col span={6}>Exchanges</Col>\n        <Col span={6}>24h Trade Volume</Col>\n        <Col span={6}>Markets</Col>\n        <Col span={6}>Change</Col>\n      </Row>\n      <Row>\n        {exchangesList.map((exchange) => (\n          <Col span={24}>\n            <Collapse>\n              <Panel\n                key={exchange.id}\n                showArrow={false}\n                header={(\n                  <Row key={exchange.id}>\n                    <Col span={6}>\n                      <Text><strong>{exchange.rank}.</strong></Text>\n                      <Avatar className=\"exchange-image\" src={exchange.iconUrl} />\n                      <Text><strong>{exchange.name}</strong></Text>\n                    </Col>\n                    <Col span={6}>${millify(exchange.volume)}</Col>\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\n                  </Row>\n                  )}\n              >\n                {HTMLReactParser(exchange.description || '')}\n              </Panel>\n            </Collapse>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Exchanges;\n","import React from 'react';\nimport millify from 'millify';\nimport { Typography, Row, Col, Statistic} from 'antd'\nimport { Link } from 'react-router-dom';\n\nimport { useGetCryptosQuery } from '../services/cryptoApi'; //importing the API module.\nimport { Cryptocurrencies } from '../components'\nimport { News } from '../components'\nimport Loader from './Loader';\n\nconst { Title } = Typography;\n\nconst Homepage = () => {\n  const { data, isFetching } = useGetCryptosQuery(10); //using a hook to make an API request.\n  //redux toolkit provides the isFetching variable as data is initially undefined.\n  const globalStats = data?.data?.stats;\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n    <Title level={2} className=\"heading\">Global Cryptocurrency Statistics</Title>\n    <Row className=\"summary-stats\">\n      <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={globalStats.total}/></Col>\n      <Col span={12}><Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)}/></Col>\n      <Col span={12}><Statistic title=\"Total Market Cap\" value={millify(globalStats.totalMarketCap)}/></Col>\n      <Col span={12}><Statistic title=\"Total 24hr Volume\" value={millify(globalStats.total24hVolume)}/></Col>\n      <Col span={12}><Statistic title=\"Total Markets\" value={millify(globalStats.totalMarkets)}/></Col>\n    </Row>\n    <div className=\"home-heading-container\">\n      <Title level={2} className=\"home-title\">Top 10 Cryptocurrencies (Market Capitalisation)</Title>\n      <Title level={3} className=\"show-more\"><Link to=\"/cryptocurrencies\">Show More</Link></Title>\n    </div>\n    <Cryptocurrencies simplified />\n    <div className=\"home-heading-container\">\n      <Title level={2} className=\"home-title\">Latest Cryptocurrency News (Source: Bing)</Title>\n      <Title level={3} className=\"show-more\"><Link to=\"/news\">Show More</Link></Title>\n    </div>\n    <News simplified />\n    </>\n  )\n}\n\nexport default Homepage\n\n//simplified shows the top 10 only. Passed down as a prop, it not specified it will default to true.\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nconst cryptoNewsHeaders = {\n    'x-bingapis-sdk': 'true',\n    'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\n    'x-rapidapi-key': `${process.env.REACT_APP_API_KEY}`\n  }\n  const baseUrl = 'https://bing-news-search1.p.rapidapi.com';\n\n  const createRequest = (url) => ({ url, headers: cryptoNewsHeaders});\n\n  export const cryptoNewsApi = createApi({\n    reducerPath: 'cryptoNewsApi',\n    baseQuery: fetchBaseQuery({ baseUrl }),\n    endpoints: (builder) => ({\n      getCryptoNews: builder.query({\n        query: ({ newsCategory, count }) => createRequest(`/news/search?q=${newsCategory}&safeSearch=off&textFormat=Raw&freshness=Day&count=${count}`),\n      })\n    })\n  });\n\nexport const { useGetCryptoNewsQuery} = cryptoNewsApi;\n","import React, { useState } from 'react';\nimport { Select, Typography, Row, Col, Avatar, Card } from 'antd';\nimport moment from 'moment';\n\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi';\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport Loader from './Loader';\n\nconst { Text, Title } = Typography;\nconst { Option } = Select;\n\nconst demoImage = 'http://coinrevolution.com/wp-content/uploads/2020/06/cryptonews.jpg';\n//simplified will be true if on the home page.\nconst News = ({ simplified }) => {\n  const [newsCategory, setNewsCategory] = useState('Cryptocurrency');\n  const { data: cryptoNews } = useGetCryptoNewsQuery({ newsCategory: newsCategory, count: simplified ? 6 : 12});\n  const { data } = useGetCryptosQuery(100);\n\n  if(!cryptoNews?.value) return <Loader />;\n\n  return (\n    <Row gutter={[24, 24]}>\n      {!simplified && (\n        <Col span={24}>\n          <Select\n            showSearch\n            className='select-news'\n            placeholder=\"Select a Crypto\"\n            optionFilterProp=\"children\"\n            onChange={(value) => setNewsCategory(value)}\n            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n          >\n            <Option value=\"Cryptocurrency\">Cryptocurrency</Option>\n            {data?.data?.coins.map((coins) => <Option value={coins.name}>{coins.name}</Option>)}\n          </Select>\n        </Col>\n\n      )}\n      {cryptoNews.value.map((news, i) => (\n        <Col xs={24} sm={12} lg={8} key={i}>\n          <Card hoverable className=\"news-card\">\n            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\n              <div className=\"news-image-container\">\n                <Title className=\"news-title\" level={4}>{news.name}</Title>\n                <img style={ {maxWidth: '200px', maxHeight: '100px'} } src={news?.image?.thumbnail?.contentUrl || demoImage} alt=\"news\"/>\n              </div>\n              <p>\n                {news.description > 100\n                  ? `${news.description.substring(0, 100)}...`\n                  : news.description\n                }\n              </p>\n              <div className=\"provider-container\">\n                <div>\n                  <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage} alt=\"news\"/>\n                  <Text className=\"provider-name\">{news.provider[0]?.name}</Text>\n                </div>\n                  <Text>{moment(news.datePublished).startOf('ss').fromNow()}</Text>\n              </div>\n            </a>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n  )\n}\n\nexport default News\n","import React, { useEffect } from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport { Layout, Typography, Space } from 'antd';\n\n\nimport { Navbar, Exchanges, Homepage, Cryptocurrencies, News, CryptoDetails } from './components';\nimport './App.css'\n\nconst App = () => {\n\n  return (\n    <div className=\"app\">\n      <div className=\"navbar\">\n        <Navbar />\n      </div>\n      <div className=\"main\">\n        <Layout>\n          <div className=\"routes\">\n            <Switch>\n              <Route exact path=\"/\">\n                <Homepage />\n              </Route>\n              <Route exact path=\"/exchanges\">\n                <Exchanges />\n              </Route>\n              <Route exact path=\"/cryptocurrencies\">\n                <Cryptocurrencies />\n              </Route>\n              <Route exact path=\"/crypto/:coinId\">\n                <CryptoDetails />\n              </Route>\n              <Route exact path=\"/news\">\n                <News />\n              </Route>\n            </Switch>\n          </div>\n        </Layout>\n        <div className=\"footer\">\n          <Typography.Title level={5} style={{ color: 'navy', textAlign: 'center' }}>\n            Coinium. <br />\n            ALL RIGHTS RESERVED. <br />\n            Coinium is a project completed as part of Project3 at General Assembly's Software Engineering Immersive Program.\n          </Typography.Title>\n          <Space>\n            <Link style={{ color: 'navy' }} to=\"/\">Home</Link>|\n            <Link style={{ color: 'navy' }} to=\"/exchanges\">Exchanges</Link>|\n            <Link style={{ color: 'navy' }} to=\"/news\">News</Link>|\n            <a style={{ color: 'navy' }} href=\"https://www.github.com/dcc7/Project3\">Github</a>\n          </Space>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App\n","// Your entire application's state. A central state of truth for redux.\nimport { configureStore } from '@reduxjs/toolkit';\n\nimport { cryptoApi } from '../services/cryptoApi';\nimport { cryptoNewsApi } from '../services/cryptoNewsApi';\n\nexport default configureStore({ //calling the configureStore as a function.\n  reducer: {\n    [cryptoApi.reducerPath]: cryptoApi.reducer, //conneting the api to the store via reducer.\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport 'antd/dist/antd.css';\nimport store from './app/store'; //importing the redux store defined in store.js, passed down as a prop.\n\nReactDOM.render(\n  //every single component should now has access to the store variable using provider from redux.\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root'));\n"],"sourceRoot":""}