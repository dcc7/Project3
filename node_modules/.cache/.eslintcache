[{"/Users/danielchoe/Projects/project3/src/index.js":"1","/Users/danielchoe/Projects/project3/src/App.js":"2","/Users/danielchoe/Projects/project3/src/app/store.js":"3","/Users/danielchoe/Projects/project3/src/services/cryptoApi.js":"4","/Users/danielchoe/Projects/project3/src/services/cryptoNewsApi.js":"5","/Users/danielchoe/Projects/project3/src/components/index.js":"6","/Users/danielchoe/Projects/project3/src/components/Exchanges.jsx":"7","/Users/danielchoe/Projects/project3/src/components/Homepage.jsx":"8","/Users/danielchoe/Projects/project3/src/components/Cryptocurrencies.jsx":"9","/Users/danielchoe/Projects/project3/src/components/CryptoDetails.jsx":"10","/Users/danielchoe/Projects/project3/src/components/Navbar.jsx":"11","/Users/danielchoe/Projects/project3/src/components/News.jsx":"12","/Users/danielchoe/Projects/project3/src/components/LineChart.jsx":"13","/Users/danielchoe/Projects/project3/src/components/Loader.jsx":"14"},{"size":384,"mtime":1638744370983,"results":"15","hashOfConfig":"16"},{"size":1866,"mtime":1639016890176,"results":"17","hashOfConfig":"16"},{"size":321,"mtime":1638751105822,"results":"18","hashOfConfig":"16"},{"size":1116,"mtime":1639010753524,"results":"19","hashOfConfig":"16"},{"size":806,"mtime":1639010756351,"results":"20","hashOfConfig":"16"},{"size":316,"mtime":1638506701566,"results":"21","hashOfConfig":"16"},{"size":1703,"mtime":1639018198112,"results":"22","hashOfConfig":"16"},{"size":1920,"mtime":1639015697846,"results":"23","hashOfConfig":"16"},{"size":2192,"mtime":1639018029943,"results":"24","hashOfConfig":"16"},{"size":5519,"mtime":1639017696023,"results":"25","hashOfConfig":"16"},{"size":1961,"mtime":1639019900584,"results":"26","hashOfConfig":"16"},{"size":2610,"mtime":1639015638400,"results":"27","hashOfConfig":"16"},{"size":1446,"mtime":1638838962024,"results":"28","hashOfConfig":"16"},{"size":214,"mtime":1638841500697,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"17gckta",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/danielchoe/Projects/project3/src/index.js",[],["62","63"],"/Users/danielchoe/Projects/project3/src/App.js",["64"],"import React, { useEffect } from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport { Layout, Typography, Space } from 'antd';\n\n\nimport { Navbar, Exchanges, Homepage, Cryptocurrencies, News, CryptoDetails } from './components';\nimport './App.css'\n\nconst App = () => {\n\n  // useEffect(() => {\n  //   document.title = \"Coinium\";\n  // }, []);\n\n  return (\n    <div className=\"app\">\n      <div className=\"navbar\">\n        <Navbar />\n      </div>\n      <div className=\"main\">\n        <Layout>\n          <div className=\"routes\">\n            <Switch>\n              <Route exact path=\"/\">\n                <Homepage />\n              </Route>\n              <Route exact path=\"/exchanges\">\n                <Exchanges />\n              </Route>\n              <Route exact path=\"/cryptocurrencies\">\n                <Cryptocurrencies />\n              </Route>\n              <Route exact path=\"/crypto/:coinId\">\n                <CryptoDetails />\n              </Route>\n              <Route exact path=\"/news\">\n                <News />\n              </Route>\n            </Switch>\n          </div>\n        </Layout>\n        <div className=\"footer\">\n          <Typography.Title level={5} style={{ color: 'navy', textAlign: 'center' }}>\n            Coinium <br />\n            ALL RIGHTS RESERVED. <br />\n            Coinium is a project completed as part of Project3 at General Assembly's Software Engineering Immersive Program.\n          </Typography.Title>\n          <Space>\n            <Link style={{ color: 'navy' }} to=\"/\">Home</Link>\n            <Link style={{ color: 'navy' }} to=\"/exchanges\">Exchanges</Link>\n            <Link style={{ color: 'navy' }} to=\"/news\">News</Link>\n            <a style={{ color: 'navy' }} href=\"https://www.github.com/dcc7/Project3\">Github</a>\n          </Space>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App\n","/Users/danielchoe/Projects/project3/src/app/store.js",[],"/Users/danielchoe/Projects/project3/src/services/cryptoApi.js",[],"/Users/danielchoe/Projects/project3/src/services/cryptoNewsApi.js",[],"/Users/danielchoe/Projects/project3/src/components/index.js",[],"/Users/danielchoe/Projects/project3/src/components/Exchanges.jsx",[],"/Users/danielchoe/Projects/project3/src/components/Homepage.jsx",[],"/Users/danielchoe/Projects/project3/src/components/Cryptocurrencies.jsx",["65"],"import React, { useState, useEffect } from 'react';\n// import React from 'react';\nimport millify from 'millify';\nimport { Link } from 'react-router-dom';\nimport { Card, Row, Col, Input } from 'antd';\n\nimport { useGetCryptosQuery } from '../services/cryptoApi';\n\nconst Cryptocurrencies = ({ simplified }) => {\n  const count = simplified ? 10 : 100;\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\n  const [cryptos, setCryptos] = useState([]);\n  const [searchTerm, setSearchTerm] =useState('');\n\n  console.log(cryptosList);\n\n  useEffect(() => {\n\n    const filteredData = cryptosList?.data?.coins.filter((coin) => coin.name.toLowerCase().includes(searchTerm.toLowerCase()));\n\n    setCryptos(filteredData);\n\n  }, [cryptosList, searchTerm]);\n  //use effect, accepts a callback function and a dependency array. It is a combination of the componentDidMount and componentDidUpdate.\n  //if anything changes in the dependency array, the callback function will be executed.\n\n  if (isFetching) return 'Loading...';\n\n  return (\n    <>\n    {!simplified && (\n      <div className=\"search-crypto\">\n        <Input placeholder=\"Search Cryptocurrency\" onChange={(e) => setSearchTerm(e.target.value)}/>\n      </div>\n\n    )}\n      <Row gutter={[15, 0]} className=\"crypto-card-container\">\n        {cryptos?.map((currency) => (\n          <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\n            <Link to={`/crypto/${currency.id}`}>\n              <Card\n                title={`${currency.rank}. ${currency.name}`}\n                extra={<img className=\"crypto-image\" src={currency.iconUrl} alt=\"crypto-image\"/>}\n                hoverable\n                >\n                  <p>Price: ${millify(currency.price)}</p>\n                  <p>Market Cap: ${millify(currency.marketCap)}</p>\n                  <p>Daily Change: {millify(currency.change)}%</p>\n              </Card>\n            </Link>\n          </Col>\n        ))}\n      </Row>\n    </>\n  )\n}\n\nexport default Cryptocurrencies\n\n//the use of parenthesis with the map method, means we will return instantly comapred to the use of curly braces.\n//the question mark ensures that when it is undefined it will not map.\n","/Users/danielchoe/Projects/project3/src/components/CryptoDetails.jsx",["66"],"import React, { useState } from 'react';\nimport HTMLReactParser from 'html-react-parser';\nimport { useParams } from 'react-router-dom';\nimport millify from 'millify';\nimport { Col, Row, Typography, Select } from 'antd';\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\n\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi';\nimport LineChart from './LineChart';\nimport Loader from './Loader';\n\nconst { Title, Text } = Typography\nconst { Option } = Select;\n\n\nconst CryptoDetails = () => {\n  const { coinId } = useParams(); //takes the ID in the url and place in a variable.\n  const [ timePeriod, setTimePeriod ] = useState('7d');\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n  const { data: coinHistory } = useGetCryptoHistoryQuery({coinId, timePeriod});\n  const cryptoDetails = data?.data?.coin;\n\n  if (cryptoDetails === undefined) return <Loader />; //required due to asynchronous nature of JS.\n\n\n  const time = ['24h','7d', '30d', '1y', '3m', '3y', '5y'];\n\n  const stats = [\n    { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\n    { title: 'Rank', value: cryptoDetails?.rank, icon: <NumberOutlined /> },\n    { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\n    { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\n    { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\n  ];\n\n  const genericStats = [\n    { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\n    { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\n    { title: 'Aprroved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\n    { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\n    { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\n  ];\n\n\n  return (\n    <Col className=\"coin-detail-container\">\n      <Col className=\"coin-heading-container\">\n        <Title level={2} className=\"coin-name\">\n           {cryptoDetails.name} ({cryptoDetails.slug}) Price\n        </Title>\n        <p>\n          {cryptoDetails.name} live price in USD.\n          View value statistics, market cap and supply.\n        </p>\n      </Col>\n      <Select\n        defaultValue=\"7d\"\n        className=\"select-timeperiod\"\n        placeholder=\"Select Time Period\"\n        onChange={(value) => setTimePeriod(value)}\n        >\n        {time.map((date) => <Option key={date}>{date}</Option>)}\n      </Select>\n      <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails.price)} coinName={cryptoDetails.name}/>\n      <Col className=\"stats-container\">\n        <Col className=\"coin-value-statistics\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">\n              {cryptoDetails.name} Value Statistics\n            </Title>\n            <p>\n              An overview showing the stats of {cryptoDetails.name}\n            </p>\n            {stats.map(({icon, title, value}) => (\n              <Col className=\"coin-stats\">\n                <Col className=\"coin-stats-name\">\n                  <Text>{icon}</Text>\n                  <Text>{title}</Text>\n                </Col>\n                <Text className=\"stats\">{value}</Text>\n              </Col>\n            ))}\n          </Col>\n        </Col>\n        <Col className=\"other-stats-info\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">\n              Other Statistics\n            </Title>\n            <p>\n              An overview showing the stats of all cryptocurrencies\n            </p>\n            {genericStats.map(({icon, title, value}) => (\n              <Col className=\"coin-stats\">\n                <Col className=\"coin-stats-name\">\n                  <Text>{icon}</Text>\n                  <Text>{title}</Text>\n                </Col>\n                <Text className=\"stats\">{value}</Text>\n              </Col>\n            ))}\n          </Col>\n        </Col>\n      </Col>\n      <Col className=\"coin-desc-link\">\n        <Row className=\"coin-desc\">\n          <Title level={3} className=\"coin-details-heading\">\n            What is {cryptoDetails.name}?\n            {HTMLReactParser(cryptoDetails.description)}\n          </Title>\n        </Row>\n        <Col className=\"coin-links\">\n          <Title level={3} className=\"coin-details-heading\">\n            {cryptoDetails.name} Links\n            {cryptoDetails.links.map((link) => (\n              <Row className=\"coin-link\" key={link.name}>\n                <Title level={5} className=\"link-name\">\n                  {link.type}\n                </Title>\n                <a href={link.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                  {link.name}\n                </a>\n              </Row>\n            ))}\n          </Title>\n        </Col>\n      </Col>\n    </Col>\n  )\n}\n\nexport default CryptoDetails\n","/Users/danielchoe/Projects/project3/src/components/Navbar.jsx",[],"/Users/danielchoe/Projects/project3/src/components/News.jsx",[],"/Users/danielchoe/Projects/project3/src/components/LineChart.jsx",[],"/Users/danielchoe/Projects/project3/src/components/Loader.jsx",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":26},{"ruleId":"75","severity":1,"message":"76","line":43,"column":24,"nodeType":"77","endLine":43,"endColumn":97},{"ruleId":"71","severity":1,"message":"78","line":19,"column":17,"nodeType":"73","messageId":"74","endLine":19,"endColumn":27},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'isFetching' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]