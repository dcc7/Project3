{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nconst cryptoApiHeaders = {\n  'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\n  'x-rapidapi-key': '07ff6f15e2msh6c5ceba69640d44p1d8732jsn31c4ae083941'\n};\nconst baseUrl = 'https://coinranking1.p.rapidapi.com';\n\nconst createRequest = url => ({\n  url,\n  headers: cryptoApiHeaders\n});\n\nexport const cryptoApi = createApi({\n  reducerPath: 'cryptoApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl\n  }),\n  endpoints: builder => ({\n    getCryptos: builder.query({\n      query: count => createRequest(`/coins?limit=${count}`)\n    }),\n    getCryptoDetails: builder.query({\n      query: coinId => createRequest(`/coin/${coinId}`)\n    }),\n    getCryptoHistory: builder.query({\n      query: ({\n        coinId,\n        timeperiod\n      }) => createRequest(`/coin/${coinId}/history/${timeperiod}`)\n    })\n  })\n}); //redux toolkit you can use a hook to get all the data from your query.\n\nexport const {\n  useGetCryptosQuery,\n  useGetCryptoDetailsQuery,\n  useGetCryptoHistoryQuery\n} = cryptoApi;","map":{"version":3,"sources":["/Users/danielchoe/Projects/project3/crypto-app/src/services/cryptoApi.js"],"names":["createApi","fetchBaseQuery","cryptoApiHeaders","baseUrl","createRequest","url","headers","cryptoApi","reducerPath","baseQuery","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timeperiod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AAEA,MAAMC,gBAAgB,GAAG;AACvB,qBAAmB,6BADI;AAEvB,oBAAkB;AAFK,CAAzB;AAIA,MAAMC,OAAO,GAAG,qCAAhB;;AAGA,MAAMC,aAAa,GAAIC,GAAD,KAAU;AAAEA,EAAAA,GAAF;AAAOC,EAAAA,OAAO,EAAEJ;AAAhB,CAAV,CAAtB;;AAEA,OAAO,MAAMK,SAAS,GAAGP,SAAS,CAAC;AACjCQ,EAAAA,WAAW,EAAE,WADoB;AAEjCC,EAAAA,SAAS,EAAER,cAAc,CAAC;AAAEE,IAAAA;AAAF,GAAD,CAFQ;AAGjCO,EAAAA,SAAS,EAAGC,OAAD,KAAc;AACvBC,IAAAA,UAAU,EAAED,OAAO,CAACE,KAAR,CAAc;AACxBA,MAAAA,KAAK,EAAGC,KAAD,IAAWV,aAAa,CAAE,gBAAeU,KAAM,EAAvB;AADP,KAAd,CADW;AAIvBC,IAAAA,gBAAgB,EAAEJ,OAAO,CAACE,KAAR,CAAc;AAC9BA,MAAAA,KAAK,EAAGG,MAAD,IAAYZ,aAAa,CAAE,SAAQY,MAAO,EAAjB;AADF,KAAd,CAJK;AAOvBC,IAAAA,gBAAgB,EAAEN,OAAO,CAACE,KAAR,CAAc;AAC9BA,MAAAA,KAAK,EAAE,CAAC;AAAEG,QAAAA,MAAF;AAAUE,QAAAA;AAAV,OAAD,KAA4Bd,aAAa,CAAE,SAAQY,MAAO,YAAWE,UAAW,EAAvC;AADlB,KAAd;AAPK,GAAd;AAHsB,CAAD,CAA3B,C,CAgBP;;AACA,OAAO,MAAM;AAAEC,EAAAA,kBAAF;AAAsBC,EAAAA,wBAAtB;AAAgDC,EAAAA;AAAhD,IAA6Ed,SAAnF","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nconst cryptoApiHeaders = {\n  'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\n  'x-rapidapi-key': '07ff6f15e2msh6c5ceba69640d44p1d8732jsn31c4ae083941'\n}\nconst baseUrl = 'https://coinranking1.p.rapidapi.com';\n\n\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders});\n\nexport const cryptoApi = createApi({\n  reducerPath: 'cryptoApi',\n  baseQuery: fetchBaseQuery({ baseUrl }),\n  endpoints: (builder) => ({\n    getCryptos: builder.query({\n      query: (count) => createRequest(`/coins?limit=${count}`)\n    }),\n    getCryptoDetails: builder.query({\n      query: (coinId) => createRequest(`/coin/${coinId}`),\n    }),\n    getCryptoHistory: builder.query({\n      query: ({ coinId, timeperiod }) => createRequest(`/coin/${coinId}/history/${timeperiod}`),\n    })\n  })\n});\n\n//redux toolkit you can use a hook to get all the data from your query.\nexport const { useGetCryptosQuery, useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } = cryptoApi;\n"]},"metadata":{},"sourceType":"module"}