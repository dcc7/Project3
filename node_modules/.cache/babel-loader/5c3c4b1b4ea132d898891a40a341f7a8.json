{"ast":null,"code":"var _jsxFileName = \"/Users/danielchoe/Projects/project3/src/components/Homepage.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport millify from 'millify';\nimport { Typography, Row, Col, Statistic } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { useGetCryptosQuery } from '../services/cryptoApi'; //importing the API module.\n\nimport { Cryptocurrencies } from '../components';\nimport { News } from '../components';\nimport Loader from './Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\n\nconst Homepage = () => {\n  _s();\n\n  var _data$data;\n\n  const {\n    data,\n    isFetching\n  } = useGetCryptosQuery(10); //using a hook to make an API request.\n  //redux toolkit provides the isFetching variable as data is initially undefined.\n\n  const globalStats = data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.stats;\n  console.log(globalStats);\n  if (isFetching) return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 26\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Title, {\n      level: 2,\n      className: \"heading\",\n      children: \"Global Cryptocurrency Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(Homepage, \"zg5pIKoEGR97SU8wBop1ivbW3k8=\", false, function () {\n  return [useGetCryptosQuery];\n});\n\n_c = Homepage;\nexport default Homepage; //simplified shows the top 10 only. Passed down as a prop, it not specified it will default to true.\n\nvar _c;\n\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"sources":["/Users/danielchoe/Projects/project3/src/components/Homepage.jsx"],"names":["React","millify","Typography","Row","Col","Statistic","Link","useGetCryptosQuery","Cryptocurrencies","News","Loader","Title","Homepage","data","isFetching","globalStats","stats","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,SAA/B,QAA+C,MAA/C;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,kBAAT,QAAmC,uBAAnC,C,CAA4D;;AAC5D,SAASC,gBAAT,QAAiC,eAAjC;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAYT,UAAlB;;AAEA,MAAMU,QAAQ,GAAG,MAAM;AAAA;;AAAA;;AACrB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAuBP,kBAAkB,CAAC,EAAD,CAA/C,CADqB,CACgC;AACrD;;AACA,QAAMQ,WAAW,GAAGF,IAAH,aAAGA,IAAH,qCAAGA,IAAI,CAAEA,IAAT,+CAAG,WAAYG,KAAhC;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AAEA,MAAID,UAAJ,EAAgB,oBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AAEhB,sBACE;AAAA,2BACA,QAAC,KAAD;AAAO,MAAA,KAAK,EAAE,CAAd;AAAiB,MAAA,SAAS,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAMD,CAfD;;GAAMF,Q;UACyBL,kB;;;KADzBK,Q;AAiBN,eAAeA,QAAf,C,CAEA","sourcesContent":["import React from 'react';\nimport millify from 'millify';\nimport { Typography, Row, Col, Statistic} from 'antd'\nimport { Link } from 'react-router-dom';\n\nimport { useGetCryptosQuery } from '../services/cryptoApi'; //importing the API module.\nimport { Cryptocurrencies } from '../components'\nimport { News } from '../components'\nimport Loader from './Loader';\n\nconst { Title } = Typography;\n\nconst Homepage = () => {\n  const { data, isFetching } = useGetCryptosQuery(10); //using a hook to make an API request.\n  //redux toolkit provides the isFetching variable as data is initially undefined.\n  const globalStats = data?.data?.stats;\n\n  console.log(globalStats);\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n    <Title level={2} className=\"heading\">Global Cryptocurrency Statistics</Title>\n\n    </>\n  )\n}\n\nexport default Homepage\n\n//simplified shows the top 10 only. Passed down as a prop, it not specified it will default to true.\n"]},"metadata":{},"sourceType":"module"}