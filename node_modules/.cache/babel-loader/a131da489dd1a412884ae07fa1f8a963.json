{"ast":null,"code":"var _jsxFileName = \"/Users/danielchoe/Projects/project3/crypto-app/src/components/LineChart.jsx\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Col, Row, Typography } from 'antd';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Chart } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst {\n  Titlea\n} = Typography;\n\nconst LineChart = ({\n  coinHistory,\n  currentPrice,\n  coinName\n}) => {\n  var _coinHistory$data;\n\n  const coinPrice = [];\n  const coinTimestamp = [];\n  console.log(coinHistory.data.history.length); // if (coinHistory?.data?.history === undefined) return \"loading...\" //required due to asynchronous nature of JS.\n\n  for (let i = 0; i < coinHistory.data.history.length; i += 1) {\n    coinPrice.push(coinHistory.data.history[i].price);\n    coinTimestamp.push(new Date(coinHistory.data.history[i].timestamp).toLocaleDateString());\n  }\n\n  const data = {\n    labels: coinTimestamp,\n    datasets: [{\n      label: 'Price in USD',\n      data: coinPrice,\n      fill: false,\n      backgroundColor: '#0071bd',\n      borderColor: '#0071bd'\n    }]\n  };\n  const options = {\n    scales: {\n      yAxes: [{\n        ticks: {\n          beginAtZero: true\n        }\n      }]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"chart-header\",\n        children: [/*#__PURE__*/_jsxDEV(Titlea, {\n          level: 2,\n          className: \"chart-title\",\n          children: [coinName, \" Price Chart\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"price-container\",\n          children: [/*#__PURE__*/_jsxDEV(Titlea, {\n            level: 5,\n            className: \"price-change\",\n            children: [coinHistory === null || coinHistory === void 0 ? void 0 : (_coinHistory$data = coinHistory.data) === null || _coinHistory$data === void 0 ? void 0 : _coinHistory$data.change, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Titlea, {\n            level: 5,\n            className: \"current-price\",\n            children: [\"Current \", coinName, \" Price: $\", currentPrice]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["/Users/danielchoe/Projects/project3/crypto-app/src/components/LineChart.jsx"],"names":["React","Line","Col","Row","Typography","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","register","Titlea","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","console","log","data","history","length","i","push","price","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","change"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Col, Row, Typography } from 'antd';\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js'\nimport { Chart } from 'react-chartjs-2'\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n)\n\n\nconst { Titlea } = Typography;\n\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\n  const coinPrice = [];\n  const coinTimestamp = [];\n\n  console.log(coinHistory.data.history.length)\n  // if (coinHistory?.data?.history === undefined) return \"loading...\" //required due to asynchronous nature of JS.\n\n  for (let i = 0; i < coinHistory.data.history.length; i += 1) {\n    coinPrice.push(coinHistory.data.history[i].price)\n    coinTimestamp.push(new Date(coinHistory.data.history[i].timestamp).toLocaleDateString())\n  }\n\n  const data = {\n    labels: coinTimestamp,\n    datasets: [\n      {\n        label: 'Price in USD',\n        data: coinPrice,\n        fill: false,\n        backgroundColor: '#0071bd',\n        borderColor: '#0071bd'\n      }\n    ]\n  }\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true\n          }\n        }\n      ]\n    }\n  }\n\n  return (\n    <div>\n      <>\n        <Row className=\"chart-header\">\n          <Titlea level={2} className=\"chart-title\">{coinName} Price Chart</Titlea>\n          <Col className=\"price-container\">\n            <Titlea level={5} className=\"price-change\">{coinHistory?.data?.change}%</Titlea>\n            <Titlea level={5} className=\"current-price\">Current {coinName} Price: ${currentPrice}</Titlea>\n          </Col>\n        </Row>\n        <Line data={data} options={options} />\n      </>\n    </div>\n  )\n}\n\nexport default LineChart\n"]},"metadata":{},"sourceType":"module"}